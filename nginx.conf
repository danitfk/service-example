upstream flaskapp {
    server	app:8000;
    keepalive	10;
}
limit_req_zone $binary_remote_addr zone=3dhublimit:10m rate=5r/s;
proxy_cache_path /tmp/nginx levels=1:2 keys_zone=flaskapp:64m inactive=60m;
proxy_cache_key "$scheme$request_method$host$request_uri";

server {
    listen 443 ssl http2;
    ssl_certificate certs/nginx-selfsigned.crt;
    ssl_certificate_key certs/nginx-selfsigned.key;
    ssl_dhparam certs/dhparam.pem;
    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling off; # Due to self signed SSL
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    ## Do not expose version
    server_tokens off;
    ## Controlling Buffer overflow attacks
    client_body_buffer_size  1K;
    client_header_buffer_size 1k;
    client_max_body_size 1k;
    large_client_header_buffers 2 1k;
    ## Start: Timeouts ##
    client_body_timeout   10;
    client_header_timeout 10;
    keepalive_timeout     5 5;
    send_timeout          10;

#### ALTERNATE CACHE METHOD TO REDUCE LOAD ON APP #####
#    root /var/www/html;
#    location /static {
#            try_files $uri $uri/ =404;
#    }
#   location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
#       set $no_cache 0;
#       expires max;
#       log_not_found off;
#       }
#######################################################


    location / {
        # Limit request
        limit_req zone=3dhublimit nodelay burst=10;
        limit_req_status 418;
	# Avoid clickjacking sniffing XSS
	add_header X-Frame-Options SAMEORIGIN;
	add_header X-Content-Type-Options nosniff;
	add_header X-XSS-Protection "1; mode=block";
        proxy_pass  http://flaskapp;
	proxy_cache flaskapp;
	proxy_cache_valid 200 10m;
	proxy_cache_bypass $no_cache;
	proxy_read_timeout 30s;
	proxy_send_timeout 30s;
	set $no_cache 1;
	add_header X-Cache $upstream_cache_status;
        include uwsgi_params;
        # Only Accept GET HEAD POST method
        if ($request_method !~ ^(GET|HEAD|POST)$ ) {
           return 444;
        }
	if ($request_uri ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$) {
	set $no_cache 0;
	expires max;
	}

    }

}

server {
    listen 80 default_server;
    listen [::]:80 default_server;
    return 301 https://$host$request_uri;
}
